{
  "resolvedId": "/Users/jameslajom/Documents/git/boxmaker-ui/components/Box/Tags.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n    <div style=\"padding-top:50px;\">\n        <div class=\"ui grid\" style=\"margin-bottom:40px;\">\n            <div class=\"one column\" style=\"width:100%;\">\n                <div style=\"display:flex\">\n                    <div style=\"width:100%;position:relative\">\n                        <button class=\"ui labeled icon basic button\" data-tooltip=\"Filter tags\" data-inverted=\"\"\n                            @click=\"show_tag_selection = !show_tag_selection\">\n                            <i class=\"filter icon\" sryle=\"background-white\"></i>\n                            <small><b>{{ available_tags.length }}</b> TAGS</small>\n                        </button>\n\n\n                        <!-- <template v-if=\"selected_tags.length == 0\">\n                            <button class=\"ui button basic\">ALL</button>\n                        </template> -->\n                        <!-- <template v-else>\n                            <button @click=\"clearTags\" class=\"ui icon button\">\n                                <i class=\"undo icon\"></i>\n                            </button>\n                        </template> -->\n                        <!-- <div class=\"ui input\">\n                            <input type=\"number\" placeholder=\"enter no. of column\" v-model=\"tray_columns\">\n                        </div> -->\n\n\n\n                        <div id=\"option-container\" style=\"position:absolute;z-index:9000;background:white;width:100%;\">\n                            <!-- set max height here -->\n                            <div class=\"option-wrapper\" :class=\"show_tag_selection ? '' : 'hide'\">\n                                <div class=\"ui grid\" style=\"margin:0px;box-sizing:border-box;\">\n                                    <template v-for=\"datum in available_tags\">\n                                        <div @click=\"handleSelect(datum.id)\" class=\"four wide column\"\n                                            :class=\"selected_tags.includes(datum.id) ? 'active' : ''\" style=\"color:gray\">\n                                            <i :class=\"selected_tags.includes(datum.id) ? 'visible' : 'invisible'\"\n                                                class=\"ui icon thumbtack\"></i>{{ `${datum.name.charAt(0).toUpperCase() +\n                                                    datum.name.slice(1)}` }} <small>({{ datum.no_of_boxes }})</small>\n                                        </div>\n                                    </template>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"selected-wrapper\" :class=\"show_tag_selection == false ? 'show-height' : 'hide-height'\">\n                    <div class=\"selected-inner\">\n                        <template v-if=\"selected_tags.length == 0\">\n                            <div\n                                style=\"background:#B31228;color:white;margin:1px;padding:3px 10px;border-radius:3px;border:solid .5px gray;width:auto;\">\n                                <small>\n                                    <i class=\"ui icon thumbtack\"></i>\n                                    <b>All</b></small>\n                            </div>\n                        </template>\n                        <template v-for=\"datum in available_tags.filter(i => !selected_tags.includes(i.id) == false)\">\n                            <div\n                                style=\"background:#B31228;color:white;margin:1px;padding:3px 10px;border-radius:3px;border:solid .5px gray;width:auto;\">\n                                <small>\n                                    <i class=\"ui icon thumbtack\"></i>\n\n                                    <b>{{ datum.name.toUpperCase() }}</b></small>\n                            </div>\n                        </template>\n                        <template v-if=\"selected_tags.length != 0\">\n                            <div @click=\"clearTags\"\n                                style=\"cursor:pointer;background:#1F1F21;color:white;margin:1px;padding:3px 10px;border-radius:3px;border:solid .5px gray;width:auto;\">\n                                <small>\n                                    <i class=\"undo icon\"></i>\n                                </small>\n                            </div>\n                        </template>\n                    </div>\n                </div>\n            </div>\n            <!-- <div :style=\"show_tag_selection ? 'display:default' : 'display:none;'\">\n                <div class=\"ui equal width grid\">\n                    <template v-for=\"(datum, i1) in Math.ceil(available_tags.length / tray_columns)\"\n                        v-if=\"show_tag_selection\">\n                        <div class=\"ui equal width row\" style=\"padding:0px;margin:0px;\">\n                            <template v-for=\"(datum, i2) in tray_columns\">\n                                <div class=\"column\">\n\n\n                                    <template v-if=\"(i1 * tray_columns + i2) < available_tags.length\">\n                                        <div class=\"\" style=\"padding:2px;width:100%\">\n\n                                            <div :for=\"available_tags[(i1 * tray_columns + i2)].id\"\n                                                style=\"align-self:center;display:flex;background:#CCCCCC;padding:10px 10px 8px 10px;border-radius:3px;position:relative\">\n\n                                                <div style=\"align-self: center;\">\n                                                    <input type=\"checkbox\" class=\"ui checkbox\"\n                                                        @change=\"handleSelect(available_tags[(i1 * tray_columns + i2)].id)\"\n                                                        :checked=\"selected_tags.filter(i => i == available_tags[(i1 * tray_columns + i2)].id).length > 0\"\n                                                        :name=\"available_tags[(i1 * tray_columns + i2)].id\">\n                                                </div>\n                                                <div style=\"align-self: center;margin-left:10px;\">\n                                                    <label :for=\"available_tags[(i1 * tray_columns + i2)].id\">{{\n                                                        available_tags[(i1 * tray_columns +\n                                                            i2)].name\n                                                    }}\n                                                        <a style=\"margin:0;position:absolute;right:10px;top:7px;\"\n                                                            class=\"ui label\"\n                                                            :data-tooltip=\"`${available_tags[(i1 * tray_columns + i2)].no_of_boxes} available boxes`\">\n                                                            {{ available_tags[(i1 * tray_columns + i2)].no_of_boxes }}\n                                                        </a>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </template>\n                                </div>\n                            </template>\n                        </div>\n                    </template>\n                </div>\n            </div> -->\n        </div>\n\n\n\n    </div>\n</template>\n\n<script>\nimport { tags } from \"@/composables/boxdata.js\"\nexport default {\n    setup() {\n        const available_tags = tags()\n        return {\n            available_tags\n        }\n    },\n    mounted() {\n        this.local_tags = this.available_tags;\n        // console.log(this.local_tags)\n    },\n    watch: {\n        tray_columns(o, n) {\n            if (o != n) {\n                this.reset_column;\n            }\n        }\n    },\n    data() {\n        return {\n            selected_tags: [],\n            local_tags: [],\n            show_tag_selection: false,\n            tray_columns: 3,\n            reset_column: false,\n        }\n    },\n    methods: {\n        clearTags() {\n            this.selected_tags = [];\n            this.$emit(\"selectedTagsId\", this.selected_tags)\n        },\n        handleSelect(id) {\n            let selected = \"\";\n            if (this.selected_tags.includes(id)) {\n                selected = this.selected_tags.filter(i => i != id);\n            } else {\n                selected = this.local_tags.filter(i => i.id == id)[0];\n                selected = [...this.selected_tags, selected.id];\n            }\n            this.selected_tags = selected;\n            // console.log(this.selected_tags)\n            this.$emit(\"selectedTagsId\", this.selected_tags)\n        }\n    }\n}\n</script>\n\n<style>\n.four.wide.column:hover {\n    color: #1F1F21 !important;\n    cursor: pointer;\n}\n\n.four.wide.column.active {\n    color: #B31228 !important;\n    cursor: pointer;\n}\n\n.option-wrapper {\n    overflow-y: auto;\n    overflow-x: none;\n    box-sizing: border-box;\n    min-height: 10px;\n    max-height: 500px;\n    width: calc(100% - 0px);\n    border: .5px solid gray;\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n    transition: min-height ease-in-out .1s, max-height ease-in-out .1s, width ease-in-out .1s;\n}\n\n.option-wrapper.hide {\n    min-height: 0px;\n    max-height: 0px;\n    border: none;\n}\n\n\n#selection-container {\n    display: flex;\n    width: 100%;\n    flex-wrap: wrap;\n    margin-bottom: 30px;\n}\n\n#selected-container {\n    margin-bottom: 30px;\n}\n\n#selection-container>div {\n    padding: 2px 10px;\n    margin: 2px;\n    border-radius: 25px;\n    cursor: pointer;\n}\n\n#selection-container>div:hover {\n    background-color: gray;\n    color: white;\n}\n\n.selected {\n    background-color: rgb(65, 65, 65);\n    color: white;\n    border: 1px inset darkgray;\n\n}\n\n.selected-inner {\n    flex-wrap: wrap;\n    width: 100%;\n    margin-top: 2px;\n    display: flex;\n}\n\n\n.selected-wrapper {\n    width: 100%;\n    display: flex;\n\n}\n</style>\n",
      "start": 1703080663650,
      "end": 1703080665087,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703080665087,
      "end": 1703080665087,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703080665087,
      "end": 1703080665087,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703080665087,
      "end": 1703080665087,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703080665087,
      "end": 1703080665087,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703080665087,
      "end": 1703080665087,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703080665087,
      "end": 1703080665087,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703080665087,
      "end": 1703080665087,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { tags } from \"@/composables/boxdata.js\"\nconst _sfc_main = {\n    setup() {\n        const available_tags = tags()\n        return {\n            available_tags\n        }\n    },\n    mounted() {\n        this.local_tags = this.available_tags;\n        // console.log(this.local_tags)\n    },\n    watch: {\n        tray_columns(o, n) {\n            if (o != n) {\n                this.reset_column;\n            }\n        }\n    },\n    data() {\n        return {\n            selected_tags: [],\n            local_tags: [],\n            show_tag_selection: false,\n            tray_columns: 3,\n            reset_column: false,\n        }\n    },\n    methods: {\n        clearTags() {\n            this.selected_tags = [];\n            this.$emit(\"selectedTagsId\", this.selected_tags)\n        },\n        handleSelect(id) {\n            let selected = \"\";\n            if (this.selected_tags.includes(id)) {\n                selected = this.selected_tags.filter(i => i != id);\n            } else {\n                selected = this.local_tags.filter(i => i.id == id)[0];\n                selected = [...this.selected_tags, selected.id];\n            }\n            this.selected_tags = selected;\n            // console.log(this.selected_tags)\n            this.$emit(\"selectedTagsId\", this.selected_tags)\n        }\n    }\n}\n\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { style: {\"padding-top\":\"50px\"} }\nconst _hoisted_2 = {\n  class: \"ui grid\",\n  style: {\"margin-bottom\":\"40px\"}\n}\nconst _hoisted_3 = {\n  class: \"one column\",\n  style: {\"width\":\"100%\"}\n}\nconst _hoisted_4 = { style: {\"display\":\"flex\"} }\nconst _hoisted_5 = { style: {\"width\":\"100%\",\"position\":\"relative\"} }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"filter icon\",\n  sryle: \"background-white\"\n}, null, -1)\nconst _hoisted_7 = {\n  id: \"option-container\",\n  style: {\"position\":\"absolute\",\"z-index\":\"9000\",\"background\":\"white\",\"width\":\"100%\"}\n}\nconst _hoisted_8 = {\n  class: \"ui grid\",\n  style: {\"margin\":\"0px\",\"box-sizing\":\"border-box\"}\n}\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = { class: \"selected-inner\" }\nconst _hoisted_11 = {\n  key: 0,\n  style: {\"background\":\"#B31228\",\"color\":\"white\",\"margin\":\"1px\",\"padding\":\"3px 10px\",\"border-radius\":\"3px\",\"border\":\"solid .5px gray\",\"width\":\"auto\"}\n}\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"small\", null, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"ui icon thumbtack\" }),\n  /*#__PURE__*/_createElementVNode(\"b\", null, \"All\")\n], -1)\nconst _hoisted_13 = [\n  _hoisted_12\n]\nconst _hoisted_14 = { style: {\"background\":\"#B31228\",\"color\":\"white\",\"margin\":\"1px\",\"padding\":\"3px 10px\",\"border-radius\":\"3px\",\"border\":\"solid .5px gray\",\"width\":\"auto\"} }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"i\", { class: \"ui icon thumbtack\" }, null, -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"small\", null, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"undo icon\" })\n], -1)\nconst _hoisted_17 = [\n  _hoisted_16\n]\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createElementVNode(\"button\", {\n              class: \"ui labeled icon basic button\",\n              \"data-tooltip\": \"Filter tags\",\n              \"data-inverted\": \"\",\n              onClick: _cache[0] || (_cache[0] = $event => ($data.show_tag_selection = !$data.show_tag_selection))\n            }, [\n              _hoisted_6,\n              _createElementVNode(\"small\", null, [\n                _createElementVNode(\"b\", null, _toDisplayString($setup.available_tags.length), 1),\n                _createTextVNode(\" TAGS\")\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\"div\", {\n                class: _normalizeClass([\"option-wrapper\", $data.show_tag_selection ? '' : 'hide'])\n              }, [\n                _createElementVNode(\"div\", _hoisted_8, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.available_tags, (datum) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      onClick: $event => ($options.handleSelect(datum.id)),\n                      class: _normalizeClass([\"four wide column\", $data.selected_tags.includes(datum.id) ? 'active' : '']),\n                      style: {\"color\":\"gray\"}\n                    }, [\n                      _createElementVNode(\"i\", {\n                        class: _normalizeClass([$data.selected_tags.includes(datum.id) ? 'visible' : 'invisible', \"ui icon thumbtack\"])\n                      }, null, 2),\n                      _createTextVNode(_toDisplayString(`${datum.name.charAt(0).toUpperCase() +\n                                                    datum.name.slice(1)}`) + \" \", 1),\n                      _createElementVNode(\"small\", null, \"(\" + _toDisplayString(datum.no_of_boxes) + \")\", 1)\n                    ], 10, _hoisted_9))\n                  }), 256))\n                ])\n              ], 2)\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"selected-wrapper\", $data.show_tag_selection == false ? 'show-height' : 'hide-height'])\n        }, [\n          _createElementVNode(\"div\", _hoisted_10, [\n            ($data.selected_tags.length == 0)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _hoisted_13))\n              : _createCommentVNode(\"\", true),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.available_tags.filter(i => !$data.selected_tags.includes(i.id) == false), (datum) => {\n              return (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                _createElementVNode(\"small\", null, [\n                  _hoisted_15,\n                  _createElementVNode(\"b\", null, _toDisplayString(datum.name.toUpperCase()), 1)\n                ])\n              ]))\n            }), 256)),\n            ($data.selected_tags.length != 0)\n              ? (_openBlock(), _createElementBlock(\"div\", {\n                  key: 1,\n                  onClick: _cache[1] || (_cache[1] = (...args) => ($options.clearTags && $options.clearTags(...args))),\n                  style: {\"cursor\":\"pointer\",\"background\":\"#1F1F21\",\"color\":\"white\",\"margin\":\"1px\",\"padding\":\"3px 10px\",\"border-radius\":\"3px\",\"border\":\"solid .5px gray\",\"width\":\"auto\"}\n                }, _hoisted_17))\n              : _createCommentVNode(\"\", true)\n          ])\n        ], 2)\n      ])\n    ])\n  ]))\n}\n\nimport \"/Users/jameslajom/Documents/git/boxmaker-ui/components/Box/Tags.vue?vue&type=style&index=0&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1703080665087,
      "end": 1703080665099,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703080665099,
      "end": 1703080665099,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703080665099,
      "end": 1703080665101,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703080665101,
      "end": 1703080665101,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703080665101,
      "end": 1703080665101,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703080665101,
      "end": 1703080665101,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703080665101,
      "end": 1703080665101,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703080665101,
      "end": 1703080665101,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703080665101,
      "end": 1703080665101,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703080665101,
      "end": 1703080665101,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703080665101,
      "end": 1703080665101,
      "order": "normal"
    }
  ]
}
