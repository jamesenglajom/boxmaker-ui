{
  "resolvedId": "C:/xampp/htdocs/projects/boxmaker/components/ComForm/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\r\n    <div id=\"CommonFormComponent\" style=\"display:flex;\">\r\n        <!-- image and preview display -->\r\n        <div class=\"preview-display\"\r\n            style=\"border-right:1px solid lightgray;width:50%;position:fixed;background-color:white;\">\r\n            <div style=\"display:flex\"> \r\n                <template v-for=\"datum in box_preview_options\" :key=\"datum\">\r\n                    <div class=\"box-preview-button\" @click=\"box_preview = datum\"\r\n                        :style=\"(box_preview == datum ? 'background-color:rgb(18,121,198) !important;color:white' : '')\">\r\n                        {{ datum }}</div>\r\n                </template>\r\n            </div>\r\n            <div style=\"height:calc(100vh - 113px);position:relative\">\r\n                <div v-show=\"box_preview == 'Sample'\">\r\n                    <img :src=\"boxData ? `https://templatemaker-dev.signcut.com/?MODEL=${boxData.id}&CUSTOMER=whisqu&REQUEST=EXPLANATION` : ''\"\r\n                        width=\"500px\" height=\"500px\" />\r\n                </div>\r\n                <div v-show=\"box_preview == 'Box outline'\">\r\n                    <img :src=\"boxData ? box_outline_preview : ''\" alt=\"\" width=\"500px\" height=\"500px\" />\r\n                </div>\r\n\r\n                <div class=\"box-description ui text\" style=\"position:absolute;bottom:0;padding:10px 20px;\">\r\n                    <div style=\"position:relative\">\r\n                        <div class=\"ui icon button circular grey\" @click=\"info_toggle = !info_toggle\">\r\n                            <i class=\"question icon\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"ui custom popup top left inverted\" :class=\"info_toggle ? 'transition visible' : 'invisible'\"\r\n                        style=\"inset: auto auto 60px 20px; display: block !important; width:400px !important;\">\r\n                        {{ boxData ? boxData.description : '' }}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- Form -->\r\n        <div class=\"form-display\" style=\"width:50%; margin-left:50%;padding:20px;\">\r\n            <div class=\"ui form\">\r\n                <div class=\"header\" style=\"margin-bottom:10px;\">\r\n                    <h5 class=\"ui header text darkgray\"><b>DIMENSIONS</b></h5>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <div class=\"custom-form-card\">\r\n                        <div class=\"field\">\r\n                            <label for=\"unit\">\r\n                                <small>UNIT</small>\r\n                            </label>\r\n                            <div class=\"ui buttons blue fluid\">\r\n                                <template v-for=\" datum  in  units \" :key=\"datum.name\">\r\n                                    <button class=\"ui button\" :class=\"selected_unit == datum.name ? 'active' : ''\"\r\n                                        @click=\"selected_unit = datum.name\">{{ datum.name }}</button>\r\n                                </template>\r\n                            </div>\r\n                        </div>\r\n                        <template v-if=\"boxData\">\r\n                            <template v-for=\" datum  in  form_elements.parameters \">\r\n                                <div class=\"field\">\r\n                                    <label :for=\"slug(datum.name)\">\r\n                                        <small>{{ datum.name }}</small>\r\n                                    </label>\r\n                                    <div class=\"ui right labeled input\">\r\n                                        <input @change=\"generatePreviewImage(datum.symbol)\" :id=\"slug(datum.name)\" step=\"1\"\r\n                                            type=\"number\" :min=\"datum.minval\" :max=\"datum.maxval\"\r\n                                            v-model=\"form[`${datum.symbol}`]\" />\r\n                                        <div class=\"ui basic label blue input-unit\">{{ datum.type == \"measure\" ?\r\n                                            selected_unit : (datum.type == 'number' ? '' : '°') }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </template>\r\n                        </template>\r\n                    </div>\r\n                    <div class=\"ui horizontal divider\">\r\n                        <small>Other Specifications</small>\r\n                    </div>\r\n                    <div class=\"custom-form-card\">\r\n                        <template v-if=\"boxData\">\r\n                            <template v-for=\" datum  in  form_elements.options \">\r\n                                <div class=\"field\">\r\n                                    <label :for=\"slug(datum.name)\">\r\n                                        <small>{{ datum.name }}</small>\r\n                                    </label>\r\n                                    <div class=\"ui right labeled input\">\r\n                                        <input @change=\"generatePreviewImage(datum.symbol)\" :id=\"slug(datum.name)\"\r\n                                            type=\"number\" :min=\"datum.minval\" :max=\"datum.maxval\"\r\n                                            v-model=\"form[`${datum.symbol}`]\" />\r\n                                        <div class=\"ui basic label blue input-unit\">{{ datum.type == \"measure\" ?\r\n                                            selected_unit : (datum.type == 'number' ? '' : '°') }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </template>\r\n                        </template>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <!-- pro -->\r\n\r\n                <!-- page settings -->\r\n                <div class=\"header\" style=\"margin:30px 0px 10px 0px ;\">\r\n                    <h5 class=\"ui header text darkgray\"><b>PAGE SETTINGS</b></h5>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <div class=\"custom-form-card\">\r\n                        <div class=\"ui field\">\r\n                            <label for=\"unit\">\r\n                                <small>Page size</small>\r\n                            </label>\r\n                            <!--select option insert here -->\r\n                            <select @change=\"generatePreviewImage('PAGEPRESET')\" class=\"ui dropdown selection\"\r\n                                v-model=\"selected_page_size\">\r\n                                <template v-for=\" datum  in  paper_sizes \" :key=\"datum.name\">\r\n                                    <option :value=\"datum.id\">{{ datum.name }}</option>\r\n                                </template>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"two fields\">\r\n                            <div class=\"field\">\r\n                                <label for=\"pagewidth\">\r\n                                    <small>Page width</small>\r\n                                    <div class=\"left pointing basic ui label red\"\r\n                                        :class=\"selected_page_size == 'Custom' ? '' : 'invisible'\">Custom</div>\r\n                                </label>\r\n                                <div class=\"ui right labeled input\"\r\n                                    :class=\"selected_page_size != 'Custom' ? 'disabled' : ''\">\r\n                                    <input @change=\"generatePreviewImage('PAGEWIDTH')\" step=\"1\" type=\"number\" min=\"0\"\r\n                                        v-model=\"form['PAGEWIDTH']\" />\r\n                                    <div class=\"ui basic label blue input-unit\">{{ \"in\" }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"field\">\r\n                                <label for=\"pageheight\">\r\n                                    <small>Page height</small>\r\n                                    <div class=\"left pointing basic ui label red\"\r\n                                        :class=\"selected_page_size == 'Custom' ? '' : 'invisible'\">Custom</div>\r\n                                </label>\r\n                                <div class=\"ui right labeled input\"\r\n                                    :class=\"selected_page_size != 'Custom' ? 'disabled' : ''\">\r\n                                    <input @change=\"generatePreviewImage('PAGEHEIGHT')\" step=\"1\" type=\"number\" min=\"0\"\r\n                                        v-model=\"form['PAGEHEIGHT']\" />\r\n                                    <div class=\"ui basic label blue input-unit\">{{ \"in\" }}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- registration mark -->\r\n\r\n                <div class=\"header\" style=\"margin:30px 0px 10px 0px ;display:flex;\">\r\n                    <div class=\"ui checkbox\">\r\n                        <input @change=\"generatePreviewImage('REGISTRATION')\" type=\"checkbox\" v-model=\"reg_mark_chkbox\">\r\n                        <label for=\"\">\r\n                            <h5 class=\"ui header text darkgray\"><b>REGISTRATION MARKS</b></h5>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <div class=\"custom-form-card\">\r\n                        <div class=\"field\">\r\n                            <label for=\"registration_mark_diameter\">\r\n                                <small>Diameter</small>\r\n                            </label>\r\n                            <div class=\"ui right labeled input\" :class=\"reg_mark_chkbox == false ? 'disabled' : ''\">\r\n                                <input @change=\"generatePreviewImage('MARK')\" type=\"number\" min=\"0\" max=\"1000\"\r\n                                    v-model=\"form['MARK']\" />\r\n                                <div class=\"ui basic label blue input-unit\">{{ selected_unit }}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"grouped fields\">\r\n                                <div class=\"two fields\">\r\n                                    <template v-for=\" datum  in  registration_marks \" :key=\"datum.id\">\r\n                                        <div class=\"field\">\r\n                                            <div class=\"ui radio checkbox\"\r\n                                                :class=\"reg_mark_chkbox == false ? 'disabled' : ''\">\r\n                                                <input @change=\"generatePreviewImage(datum.symbol)\" type=\"radio\"\r\n                                                    name=\"regmark\" :value=\"datum.id\" v-model=\"selected_reg_mark\">\r\n                                                <label>{{ datum.description }}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </template>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"ui horizontal divider\">\r\n                    <small>Other Specifications</small>\r\n                </div>\r\n\r\n                <div class=\"custom-form-card\" style=\"margin-top:10px\">\r\n                    <template v-for=\" datum  in  pro_setting_form \">\r\n                        <div class=\"field\">\r\n                            <label for=\"segments_per_arc\">\r\n                                <small>{{ datum.name }}</small>\r\n                            </label>\r\n                            <div class=\"ui right labeled input\">\r\n                                <input @change=\"generatePreviewImage(datum.symbol)\" type=\"text\" :min=\"minval\" :max=\"maxval\"\r\n                                    v-model=\"form[`${datum.symbol}`]\" />\r\n                                <div class=\"ui basic label blue input-unit\">{{ selected_unit }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </div>\r\n            </div>\r\n        </div>node \r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"CommonForm\",\r\n    props: [\"boxData\"],\r\n    watch: {\r\n        selected_unit(n, o) {\r\n            // alert(o +\"  :  \"+ n)\r\n            // let formElements =  this.boxData.parameters.\r\n            this.convertFormValues(o, n);\r\n        },\r\n        selected_page_size(v) {\r\n            if (v != \"Auto\") {\r\n                let paper = this.paper_sizes.filter(i => i.id == v)[0];\r\n                this.form[\"PAGEWIDTH\"] = paper.width;\r\n                this.form[\"PAGEHEIGHT\"] = paper.height;\r\n            }\r\n        },\r\n        reg_mark_chkbox(v) {\r\n            if (v) {\r\n                this.form[\"REGISTRATION\"] = this.selected_reg_mark;\r\n            } else {\r\n                this.form[\"REGISTRATION\"] = 'none';\r\n            }\r\n        },\r\n        form(v) {\r\n            // alert(v);\r\n        },\r\n        boxData(v) {\r\n            // console.log(\"BOXDATA\");\r\n            // console.log(v);\r\n            this.extractFormElements();\r\n            this.generatePreviewImage();\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            form_elements: [], // segregated form\r\n            form_elements_inline: [], // inline form\r\n            box_preview: \"Sample\",\r\n            box_preview_options: [\"Box outline\", \"Sample\"],\r\n            selected_unit: \"mm\",\r\n            reg_mark_chkbox: false,\r\n            selected_reg_mark: \"page\",\r\n            selected_page_size: \"Auto\",\r\n            pro_setting_form: [],\r\n            box_outline_preview: \"\",\r\n            info_toggle: false,\r\n            registration_marks: [\r\n                // {id:1,description:\"No registrations marks\"},\r\n                { id: \"page\", description: \"In the corners of the page\" },\r\n                { id: \"model\", description: \"Around each model\" },\r\n            ],\r\n            units: [\r\n                { name: \"mm\", mm: 1, cm: .1, inch: 0.0393700787 },\r\n                { name: \"cm\", mm: 10, cm: 1, inch: 0.3937007874 },\r\n                { name: \"inch\", mm: 25.4, cm: 2.54, inch: 1 },\r\n            ],\r\n            form: {},\r\n            // paper sizes default unit is in inches\r\n            paper_sizes: [\r\n                { id: \"Auto\", name: \"Fit page to drawing\", width: 0, height: 0 },\r\n                { id: \"Custom\", name: \"Custom: You decide.\", width: 0, height: 0 },\r\n                { id: \"A4\", name: \"A4 Portrait\", width: 8.27, height: 11.69 },\r\n                { id: \"A4L\", name: \"A4 Landscape\", width: 11.69, height: 8.27 },\r\n                { id: \"Letter\", name: \"US Letter Portrait\", width: 8.5, height: 11 },\r\n                { id: \"LetterL\", name: \"US Letter Landscape\", width: 11, height: 8.5 },\r\n                { id: \"A3\", name: \"A3 Portrait\", width: 11.7, height: 16.5 },\r\n                { id: \"A3L\", name: \"A3 Landscape\", width: 16.5, height: 11.7 },\r\n                { id: \"12x12\", name: \"12 x 12 inch\", width: 12, height: 12 },\r\n                { id: \"12x24\", name: \"12 x 24 inch\", width: 12, height: 24 },\r\n                { id: \"24x12\", name: \"24 x 12 inch\", width: 24, height: 12 },\r\n                { id: \"A3PLUS\", name: \"A3 Plus (Portrait)\", width: 12.95, height: 19.02 },\r\n                { id: \"A3PLUSL\", name: \"A3 Plus (Landscape)\", width: 19.02, height: 12.95 },\r\n                //\"1020x710\" => array(\"1020 x 710 mm\",1020,710),\r\n                //\"710x1020\" => array(\"710 x 2020 mm\",2020,710),\r\n                //\"915x540\" => array(\"915 x 540 mm\",915,540),\r\n                //\"540x915\" => array(\"540 x 915 mm\",540,915)\r\n                //\"FLUTE\" => array(\"Flute Board, 1200 x 2400 mm\",1200,2400),\r\n                //\"FLUTEL\" => array(\"Flute Board Landscape, 2400x1200 mm\",2400,1200),\r\n            ],\r\n        }\r\n    },\r\n    methods: {\r\n        generatePreviewImage(el) {\r\n            // alert(el + \" element has detected change\"); // el variable for testing each element\r\n            let temp = this.form, url = \"\", akeys = Object.keys(temp);\r\n            akeys.forEach((v) => {\r\n                switch (v) {\r\n                    case \"REGISTRATION\":\r\n                    case \"MARK\":\r\n                        if (this.reg_mark_chkbox) {\r\n                            url = url + `&${v}=${temp[v]}`;\r\n                        }\r\n                        break;\r\n                    case \"PAGEWIDTH\":\r\n                    case \"PAGEHEIGHT\":\r\n                        if (this.selected_page_size != \"Auto\") {\r\n                            url = url + `&${v}=${temp[v]}`;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (temp[v] != 0) {\r\n                            if (this.reg_mark_chkbox == false) { }\r\n                            url = url + `&${v}=${temp[v]}`;\r\n                        }\r\n                        break;\r\n                }\r\n            });\r\n            this.box_outline_preview = `https://templatemaker-dev.signcut.com?REQUEST=DIELINESPREVIEW&MODEL=${this.boxData.id}&CUSTOMER=whisqu` + url;\r\n        },\r\n        slug(name) {\r\n            return name.replace(/[^a-zA-Z ]/g, \"\").replace(/\\s/g, \"\").toLowerCase();\r\n        },\r\n        extractFormElements() {\r\n            let tmp = this.boxData, parameter_class = Object.keys(this.boxData.parameters), form_elements = [], form_elements_inline = [];\r\n            parameter_class.forEach(((v) => {\r\n                let temp = [...Object.values(tmp[\"parameters\"][v])];\r\n                if (v == \"professional\") {\r\n                    temp = [...(Object.values(tmp[\"parameters\"][v])).filter(i => [\"REGISTRATION\", \"MARK\", \"BLEED\", \"OVERCUT\", \"DASH\", \"GAP\", \"FILMIN\"].includes(i.symbol))]\r\n                    this.pro_setting_form = [...(Object.values(tmp[\"parameters\"][v])).filter(i => [\"BLEED\", \"OVERCUT\", \"DASH\", \"GAP\", \"FILMIN\"].includes(i.symbol))]\r\n                } else if (v == \"standard\") {\r\n                    temp = [...(Object.values(tmp[\"parameters\"][v])).filter(i => [\"PAGEPRESET\", \"PAGEHEIGHT\", \"PAGEWIDTH\"].includes(i.symbol))]\r\n                }\r\n                form_elements[v] = [...form_elements, ...temp];\r\n                form_elements_inline = [...form_elements_inline, ...temp];\r\n\r\n            }));\r\n            this.form_elements = form_elements;\r\n            this.form_elements_inline = form_elements_inline;\r\n            this.initializeFormData();\r\n        },\r\n        initializeFormData() {\r\n            Object.keys(this.form_elements).forEach(((v) => {\r\n                this.form_elements[v].forEach(((v1) => {\r\n                    this.form[v1.symbol] = v1.value;\r\n                }));\r\n            }))\r\n            \r\n            // console.log(this.form);\r\n        },\r\n        resetFormValues() {\r\n            this.initializeFormData();\r\n        },\r\n        convertFormValues(from, to) {\r\n            let tmp = this.form, operation = this.units.filter(i => i.name == from)[0];\r\n            Object.entries(tmp).filter(i=> ![\"PAGEWIDTH\",\"PAGEHEIGHT\"].includes(i[0])).forEach(((v) => {\r\n                let el = this.form_elements_inline.filter(i => i.symbol == v[0])[0];\r\n                    if (el[\"type\"] == \"measure\") {\r\n                        this.form[v[0]] = (to == \"mm\" ? Math.round((v[1] * operation[to])): Math.round((v[1] * operation[to])*100) / 100);\r\n                    }\r\n            }));\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.custom-form-card {\r\n    padding: 20px 40px;\r\n    background-color: white;\r\n    box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\r\n}\r\n\r\n.input-unit {\r\n    /* width: 75px; */\r\n    text-align: center;\r\n}\r\n\r\n.box-preview-button {\r\n    border: solid 1px lightgray;\r\n    width: 50%;\r\n    cursor: pointer;\r\n    background-color: white;\r\n    padding: 10px 2px;\r\n    text-align: center;\r\n}\r\n\r\n.box-preview-button:hover {\r\n    background-color: lightgray;\r\n}\r\n</style>",
      "start": 1702283579315,
      "end": 1702283580100,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702283580100,
      "end": 1702283580100,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702283580100,
      "end": 1702283580100,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702283580100,
      "end": 1702283580100,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702283580100,
      "end": 1702283580100,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702283580100,
      "end": 1702283580100,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702283580100,
      "end": 1702283580100,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702283580100,
      "end": 1702283580100,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\r\nconst _sfc_main = {\r\n    name: \"CommonForm\",\r\n    props: [\"boxData\"],\r\n    watch: {\r\n        selected_unit(n, o) {\r\n            // alert(o +\"  :  \"+ n)\r\n            // let formElements =  this.boxData.parameters.\r\n            this.convertFormValues(o, n);\r\n        },\r\n        selected_page_size(v) {\r\n            if (v != \"Auto\") {\r\n                let paper = this.paper_sizes.filter(i => i.id == v)[0];\r\n                this.form[\"PAGEWIDTH\"] = paper.width;\r\n                this.form[\"PAGEHEIGHT\"] = paper.height;\r\n            }\r\n        },\r\n        reg_mark_chkbox(v) {\r\n            if (v) {\r\n                this.form[\"REGISTRATION\"] = this.selected_reg_mark;\r\n            } else {\r\n                this.form[\"REGISTRATION\"] = 'none';\r\n            }\r\n        },\r\n        form(v) {\r\n            // alert(v);\r\n        },\r\n        boxData(v) {\r\n            // console.log(\"BOXDATA\");\r\n            // console.log(v);\r\n            this.extractFormElements();\r\n            this.generatePreviewImage();\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            form_elements: [], // segregated form\r\n            form_elements_inline: [], // inline form\r\n            box_preview: \"Sample\",\r\n            box_preview_options: [\"Box outline\", \"Sample\"],\r\n            selected_unit: \"mm\",\r\n            reg_mark_chkbox: false,\r\n            selected_reg_mark: \"page\",\r\n            selected_page_size: \"Auto\",\r\n            pro_setting_form: [],\r\n            box_outline_preview: \"\",\r\n            info_toggle: false,\r\n            registration_marks: [\r\n                // {id:1,description:\"No registrations marks\"},\r\n                { id: \"page\", description: \"In the corners of the page\" },\r\n                { id: \"model\", description: \"Around each model\" },\r\n            ],\r\n            units: [\r\n                { name: \"mm\", mm: 1, cm: .1, inch: 0.0393700787 },\r\n                { name: \"cm\", mm: 10, cm: 1, inch: 0.3937007874 },\r\n                { name: \"inch\", mm: 25.4, cm: 2.54, inch: 1 },\r\n            ],\r\n            form: {},\r\n            // paper sizes default unit is in inches\r\n            paper_sizes: [\r\n                { id: \"Auto\", name: \"Fit page to drawing\", width: 0, height: 0 },\r\n                { id: \"Custom\", name: \"Custom: You decide.\", width: 0, height: 0 },\r\n                { id: \"A4\", name: \"A4 Portrait\", width: 8.27, height: 11.69 },\r\n                { id: \"A4L\", name: \"A4 Landscape\", width: 11.69, height: 8.27 },\r\n                { id: \"Letter\", name: \"US Letter Portrait\", width: 8.5, height: 11 },\r\n                { id: \"LetterL\", name: \"US Letter Landscape\", width: 11, height: 8.5 },\r\n                { id: \"A3\", name: \"A3 Portrait\", width: 11.7, height: 16.5 },\r\n                { id: \"A3L\", name: \"A3 Landscape\", width: 16.5, height: 11.7 },\r\n                { id: \"12x12\", name: \"12 x 12 inch\", width: 12, height: 12 },\r\n                { id: \"12x24\", name: \"12 x 24 inch\", width: 12, height: 24 },\r\n                { id: \"24x12\", name: \"24 x 12 inch\", width: 24, height: 12 },\r\n                { id: \"A3PLUS\", name: \"A3 Plus (Portrait)\", width: 12.95, height: 19.02 },\r\n                { id: \"A3PLUSL\", name: \"A3 Plus (Landscape)\", width: 19.02, height: 12.95 },\r\n                //\"1020x710\" => array(\"1020 x 710 mm\",1020,710),\r\n                //\"710x1020\" => array(\"710 x 2020 mm\",2020,710),\r\n                //\"915x540\" => array(\"915 x 540 mm\",915,540),\r\n                //\"540x915\" => array(\"540 x 915 mm\",540,915)\r\n                //\"FLUTE\" => array(\"Flute Board, 1200 x 2400 mm\",1200,2400),\r\n                //\"FLUTEL\" => array(\"Flute Board Landscape, 2400x1200 mm\",2400,1200),\r\n            ],\r\n        }\r\n    },\r\n    methods: {\r\n        generatePreviewImage(el) {\r\n            // alert(el + \" element has detected change\"); // el variable for testing each element\r\n            let temp = this.form, url = \"\", akeys = Object.keys(temp);\r\n            akeys.forEach((v) => {\r\n                switch (v) {\r\n                    case \"REGISTRATION\":\r\n                    case \"MARK\":\r\n                        if (this.reg_mark_chkbox) {\r\n                            url = url + `&${v}=${temp[v]}`;\r\n                        }\r\n                        break;\r\n                    case \"PAGEWIDTH\":\r\n                    case \"PAGEHEIGHT\":\r\n                        if (this.selected_page_size != \"Auto\") {\r\n                            url = url + `&${v}=${temp[v]}`;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (temp[v] != 0) {\r\n                            if (this.reg_mark_chkbox == false) { }\r\n                            url = url + `&${v}=${temp[v]}`;\r\n                        }\r\n                        break;\r\n                }\r\n            });\r\n            this.box_outline_preview = `https://templatemaker-dev.signcut.com?REQUEST=DIELINESPREVIEW&MODEL=${this.boxData.id}&CUSTOMER=whisqu` + url;\r\n        },\r\n        slug(name) {\r\n            return name.replace(/[^a-zA-Z ]/g, \"\").replace(/\\s/g, \"\").toLowerCase();\r\n        },\r\n        extractFormElements() {\r\n            let tmp = this.boxData, parameter_class = Object.keys(this.boxData.parameters), form_elements = [], form_elements_inline = [];\r\n            parameter_class.forEach(((v) => {\r\n                let temp = [...Object.values(tmp[\"parameters\"][v])];\r\n                if (v == \"professional\") {\r\n                    temp = [...(Object.values(tmp[\"parameters\"][v])).filter(i => [\"REGISTRATION\", \"MARK\", \"BLEED\", \"OVERCUT\", \"DASH\", \"GAP\", \"FILMIN\"].includes(i.symbol))]\r\n                    this.pro_setting_form = [...(Object.values(tmp[\"parameters\"][v])).filter(i => [\"BLEED\", \"OVERCUT\", \"DASH\", \"GAP\", \"FILMIN\"].includes(i.symbol))]\r\n                } else if (v == \"standard\") {\r\n                    temp = [...(Object.values(tmp[\"parameters\"][v])).filter(i => [\"PAGEPRESET\", \"PAGEHEIGHT\", \"PAGEWIDTH\"].includes(i.symbol))]\r\n                }\r\n                form_elements[v] = [...form_elements, ...temp];\r\n                form_elements_inline = [...form_elements_inline, ...temp];\r\n\r\n            }));\r\n            this.form_elements = form_elements;\r\n            this.form_elements_inline = form_elements_inline;\r\n            this.initializeFormData();\r\n        },\r\n        initializeFormData() {\r\n            Object.keys(this.form_elements).forEach(((v) => {\r\n                this.form_elements[v].forEach(((v1) => {\r\n                    this.form[v1.symbol] = v1.value;\r\n                }));\r\n            }))\r\n            \r\n            // console.log(this.form);\r\n        },\r\n        resetFormValues() {\r\n            this.initializeFormData();\r\n        },\r\n        convertFormValues(from, to) {\r\n            let tmp = this.form, operation = this.units.filter(i => i.name == from)[0];\r\n            Object.entries(tmp).filter(i=> ![\"PAGEWIDTH\",\"PAGEHEIGHT\"].includes(i[0])).forEach(((v) => {\r\n                let el = this.form_elements_inline.filter(i => i.symbol == v[0])[0];\r\n                    if (el[\"type\"] == \"measure\") {\r\n                        this.form[v[0]] = (to == \"mm\" ? Math.round((v[1] * operation[to])): Math.round((v[1] * operation[to])*100) / 100);\r\n                    }\r\n            }));\r\n        }\r\n    }\r\n}\r\n\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass, vModelText as _vModelText, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, vModelRadio as _vModelRadio, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"CommonFormComponent\",\n  style: {\"display\":\"flex\"}\n}\nconst _hoisted_2 = {\n  class: \"preview-display\",\n  style: {\"border-right\":\"1px solid lightgray\",\"width\":\"50%\",\"position\":\"fixed\",\"background-color\":\"white\"}\n}\nconst _hoisted_3 = { style: {\"display\":\"flex\"} }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = { style: {\"height\":\"calc(100vh - 113px)\",\"position\":\"relative\"} }\nconst _hoisted_6 = [\"src\"]\nconst _hoisted_7 = [\"src\"]\nconst _hoisted_8 = {\n  class: \"box-description ui text\",\n  style: {\"position\":\"absolute\",\"bottom\":\"0\",\"padding\":\"10px 20px\"}\n}\nconst _hoisted_9 = { style: {\"position\":\"relative\"} }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"i\", { class: \"question icon\" }, null, -1)\nconst _hoisted_11 = [\n  _hoisted_10\n]\nconst _hoisted_12 = {\n  class: \"form-display\",\n  style: {\"width\":\"50%\",\"margin-left\":\"50%\",\"padding\":\"20px\"}\n}\nconst _hoisted_13 = { class: \"ui form\" }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header\",\n  style: {\"margin-bottom\":\"10px\"}\n}, [\n  /*#__PURE__*/_createElementVNode(\"h5\", { class: \"ui header text darkgray\" }, [\n    /*#__PURE__*/_createElementVNode(\"b\", null, \"DIMENSIONS\")\n  ])\n], -1)\nconst _hoisted_15 = { class: \"content\" }\nconst _hoisted_16 = { class: \"custom-form-card\" }\nconst _hoisted_17 = { class: \"field\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"unit\" }, [\n  /*#__PURE__*/_createElementVNode(\"small\", null, \"UNIT\")\n], -1)\nconst _hoisted_19 = { class: \"ui buttons blue fluid\" }\nconst _hoisted_20 = [\"onClick\"]\nconst _hoisted_21 = { class: \"field\" }\nconst _hoisted_22 = [\"for\"]\nconst _hoisted_23 = { class: \"ui right labeled input\" }\nconst _hoisted_24 = [\"onChange\", \"id\", \"min\", \"max\", \"onUpdate:modelValue\"]\nconst _hoisted_25 = { class: \"ui basic label blue input-unit\" }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"ui horizontal divider\" }, [\n  /*#__PURE__*/_createElementVNode(\"small\", null, \"Other Specifications\")\n], -1)\nconst _hoisted_27 = { class: \"custom-form-card\" }\nconst _hoisted_28 = { class: \"field\" }\nconst _hoisted_29 = [\"for\"]\nconst _hoisted_30 = { class: \"ui right labeled input\" }\nconst _hoisted_31 = [\"onChange\", \"id\", \"min\", \"max\", \"onUpdate:modelValue\"]\nconst _hoisted_32 = { class: \"ui basic label blue input-unit\" }\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header\",\n  style: {\"margin\":\"30px 0px 10px 0px\"}\n}, [\n  /*#__PURE__*/_createElementVNode(\"h5\", { class: \"ui header text darkgray\" }, [\n    /*#__PURE__*/_createElementVNode(\"b\", null, \"PAGE SETTINGS\")\n  ])\n], -1)\nconst _hoisted_34 = { class: \"content\" }\nconst _hoisted_35 = { class: \"custom-form-card\" }\nconst _hoisted_36 = { class: \"ui field\" }\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"unit\" }, [\n  /*#__PURE__*/_createElementVNode(\"small\", null, \"Page size\")\n], -1)\nconst _hoisted_38 = [\"value\"]\nconst _hoisted_39 = { class: \"two fields\" }\nconst _hoisted_40 = { class: \"field\" }\nconst _hoisted_41 = { for: \"pagewidth\" }\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"small\", null, \"Page width\", -1)\nconst _hoisted_43 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"ui basic label blue input-unit\" }, /*#__PURE__*/_toDisplayString(\"in\"), -1)\nconst _hoisted_44 = { class: \"field\" }\nconst _hoisted_45 = { for: \"pageheight\" }\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"small\", null, \"Page height\", -1)\nconst _hoisted_47 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"ui basic label blue input-unit\" }, /*#__PURE__*/_toDisplayString(\"in\"), -1)\nconst _hoisted_48 = {\n  class: \"header\",\n  style: {\"margin\":\"30px 0px 10px 0px\",\"display\":\"flex\"}\n}\nconst _hoisted_49 = { class: \"ui checkbox\" }\nconst _hoisted_50 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"\" }, [\n  /*#__PURE__*/_createElementVNode(\"h5\", { class: \"ui header text darkgray\" }, [\n    /*#__PURE__*/_createElementVNode(\"b\", null, \"REGISTRATION MARKS\")\n  ])\n], -1)\nconst _hoisted_51 = { class: \"content\" }\nconst _hoisted_52 = { class: \"custom-form-card\" }\nconst _hoisted_53 = { class: \"field\" }\nconst _hoisted_54 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"registration_mark_diameter\" }, [\n  /*#__PURE__*/_createElementVNode(\"small\", null, \"Diameter\")\n], -1)\nconst _hoisted_55 = { class: \"ui basic label blue input-unit\" }\nconst _hoisted_56 = { class: \"field\" }\nconst _hoisted_57 = { class: \"grouped fields\" }\nconst _hoisted_58 = { class: \"two fields\" }\nconst _hoisted_59 = [\"onChange\", \"value\"]\nconst _hoisted_60 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"ui horizontal divider\" }, [\n  /*#__PURE__*/_createElementVNode(\"small\", null, \"Other Specifications\")\n], -1)\nconst _hoisted_61 = {\n  class: \"custom-form-card\",\n  style: {\"margin-top\":\"10px\"}\n}\nconst _hoisted_62 = { class: \"field\" }\nconst _hoisted_63 = { for: \"segments_per_arc\" }\nconst _hoisted_64 = { class: \"ui right labeled input\" }\nconst _hoisted_65 = [\"onChange\", \"min\", \"max\", \"onUpdate:modelValue\"]\nconst _hoisted_66 = { class: \"ui basic label blue input-unit\" }\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.box_preview_options, (datum) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: datum,\n            class: \"box-preview-button\",\n            onClick: $event => ($data.box_preview = datum),\n            style: _normalizeStyle(($data.box_preview == datum ? 'background-color:rgb(18,121,198) !important;color:white' : ''))\n          }, _toDisplayString(datum), 13, _hoisted_4))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"div\", null, [\n          _createElementVNode(\"img\", {\n            src: $props.boxData ? `https://templatemaker-dev.signcut.com/?MODEL=${$props.boxData.id}&CUSTOMER=whisqu&REQUEST=EXPLANATION` : '',\n            width: \"500px\",\n            height: \"500px\"\n          }, null, 8, _hoisted_6)\n        ], 512), [\n          [_vShow, $data.box_preview == 'Sample']\n        ]),\n        _withDirectives(_createElementVNode(\"div\", null, [\n          _createElementVNode(\"img\", {\n            src: $props.boxData ? $data.box_outline_preview : '',\n            alt: \"\",\n            width: \"500px\",\n            height: \"500px\"\n          }, null, 8, _hoisted_7)\n        ], 512), [\n          [_vShow, $data.box_preview == 'Box outline']\n        ]),\n        _createElementVNode(\"div\", _hoisted_8, [\n          _createElementVNode(\"div\", _hoisted_9, [\n            _createElementVNode(\"div\", {\n              class: \"ui icon button circular grey\",\n              onClick: _cache[0] || (_cache[0] = $event => ($data.info_toggle = !$data.info_toggle))\n            }, _hoisted_11)\n          ]),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"ui custom popup top left inverted\", $data.info_toggle ? 'transition visible' : 'invisible']),\n            style: {\"inset\":\"auto auto 60px 20px\",\"display\":\"block !important\",\"width\":\"400px !important\"}\n          }, _toDisplayString($props.boxData ? $props.boxData.description : ''), 3)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_12, [\n      _createElementVNode(\"div\", _hoisted_13, [\n        _hoisted_14,\n        _createElementVNode(\"div\", _hoisted_15, [\n          _createElementVNode(\"div\", _hoisted_16, [\n            _createElementVNode(\"div\", _hoisted_17, [\n              _hoisted_18,\n              _createElementVNode(\"div\", _hoisted_19, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.units, (datum) => {\n                  return (_openBlock(), _createElementBlock(\"button\", {\n                    key: datum.name,\n                    class: _normalizeClass([\"ui button\", $data.selected_unit == datum.name ? 'active' : '']),\n                    onClick: $event => ($data.selected_unit = datum.name)\n                  }, _toDisplayString(datum.name), 11, _hoisted_20))\n                }), 128))\n              ])\n            ]),\n            ($props.boxData)\n              ? (_openBlock(true), _createElementBlock(_Fragment, { key: 0 }, _renderList($data.form_elements.parameters, (datum) => {\n                  return (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [\n                    _createElementVNode(\"label\", {\n                      for: $options.slug(datum.name)\n                    }, [\n                      _createElementVNode(\"small\", null, _toDisplayString(datum.name), 1)\n                    ], 8, _hoisted_22),\n                    _createElementVNode(\"div\", _hoisted_23, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        onChange: $event => ($options.generatePreviewImage(datum.symbol)),\n                        id: $options.slug(datum.name),\n                        step: \"1\",\n                        type: \"number\",\n                        min: datum.minval,\n                        max: datum.maxval,\n                        \"onUpdate:modelValue\": $event => (($data.form[`${datum.symbol}`]) = $event)\n                      }, null, 40, _hoisted_24), [\n                        [_vModelText, $data.form[`${datum.symbol}`]]\n                      ]),\n                      _createElementVNode(\"div\", _hoisted_25, _toDisplayString(datum.type == \"measure\" ?\r\n                                            $data.selected_unit : (datum.type == 'number' ? '' : '°')), 1)\n                    ])\n                  ]))\n                }), 256))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _hoisted_26,\n          _createElementVNode(\"div\", _hoisted_27, [\n            ($props.boxData)\n              ? (_openBlock(true), _createElementBlock(_Fragment, { key: 0 }, _renderList($data.form_elements.options, (datum) => {\n                  return (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [\n                    _createElementVNode(\"label\", {\n                      for: $options.slug(datum.name)\n                    }, [\n                      _createElementVNode(\"small\", null, _toDisplayString(datum.name), 1)\n                    ], 8, _hoisted_29),\n                    _createElementVNode(\"div\", _hoisted_30, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        onChange: $event => ($options.generatePreviewImage(datum.symbol)),\n                        id: $options.slug(datum.name),\n                        type: \"number\",\n                        min: datum.minval,\n                        max: datum.maxval,\n                        \"onUpdate:modelValue\": $event => (($data.form[`${datum.symbol}`]) = $event)\n                      }, null, 40, _hoisted_31), [\n                        [_vModelText, $data.form[`${datum.symbol}`]]\n                      ]),\n                      _createElementVNode(\"div\", _hoisted_32, _toDisplayString(datum.type == \"measure\" ?\r\n                                            $data.selected_unit : (datum.type == 'number' ? '' : '°')), 1)\n                    ])\n                  ]))\n                }), 256))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]),\n        _hoisted_33,\n        _createElementVNode(\"div\", _hoisted_34, [\n          _createElementVNode(\"div\", _hoisted_35, [\n            _createElementVNode(\"div\", _hoisted_36, [\n              _hoisted_37,\n              _withDirectives(_createElementVNode(\"select\", {\n                onChange: _cache[1] || (_cache[1] = $event => ($options.generatePreviewImage('PAGEPRESET'))),\n                class: \"ui dropdown selection\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => (($data.selected_page_size) = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.paper_sizes, (datum) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: datum.name,\n                    value: datum.id\n                  }, _toDisplayString(datum.name), 9, _hoisted_38))\n                }), 128))\n              ], 544), [\n                [_vModelSelect, $data.selected_page_size]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_39, [\n              _createElementVNode(\"div\", _hoisted_40, [\n                _createElementVNode(\"label\", _hoisted_41, [\n                  _hoisted_42,\n                  _createElementVNode(\"div\", {\n                    class: _normalizeClass([\"left pointing basic ui label red\", $data.selected_page_size == 'Custom' ? '' : 'invisible'])\n                  }, \"Custom\", 2)\n                ]),\n                _createElementVNode(\"div\", {\n                  class: _normalizeClass([\"ui right labeled input\", $data.selected_page_size != 'Custom' ? 'disabled' : ''])\n                }, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    onChange: _cache[3] || (_cache[3] = $event => ($options.generatePreviewImage('PAGEWIDTH'))),\n                    step: \"1\",\n                    type: \"number\",\n                    min: \"0\",\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => (($data.form['PAGEWIDTH']) = $event))\n                  }, null, 544), [\n                    [_vModelText, $data.form['PAGEWIDTH']]\n                  ]),\n                  _hoisted_43\n                ], 2)\n              ]),\n              _createElementVNode(\"div\", _hoisted_44, [\n                _createElementVNode(\"label\", _hoisted_45, [\n                  _hoisted_46,\n                  _createElementVNode(\"div\", {\n                    class: _normalizeClass([\"left pointing basic ui label red\", $data.selected_page_size == 'Custom' ? '' : 'invisible'])\n                  }, \"Custom\", 2)\n                ]),\n                _createElementVNode(\"div\", {\n                  class: _normalizeClass([\"ui right labeled input\", $data.selected_page_size != 'Custom' ? 'disabled' : ''])\n                }, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    onChange: _cache[5] || (_cache[5] = $event => ($options.generatePreviewImage('PAGEHEIGHT'))),\n                    step: \"1\",\n                    type: \"number\",\n                    min: \"0\",\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => (($data.form['PAGEHEIGHT']) = $event))\n                  }, null, 544), [\n                    [_vModelText, $data.form['PAGEHEIGHT']]\n                  ]),\n                  _hoisted_47\n                ], 2)\n              ])\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_48, [\n          _createElementVNode(\"div\", _hoisted_49, [\n            _withDirectives(_createElementVNode(\"input\", {\n              onChange: _cache[7] || (_cache[7] = $event => ($options.generatePreviewImage('REGISTRATION'))),\n              type: \"checkbox\",\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => (($data.reg_mark_chkbox) = $event))\n            }, null, 544), [\n              [_vModelCheckbox, $data.reg_mark_chkbox]\n            ]),\n            _hoisted_50\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_51, [\n          _createElementVNode(\"div\", _hoisted_52, [\n            _createElementVNode(\"div\", _hoisted_53, [\n              _hoisted_54,\n              _createElementVNode(\"div\", {\n                class: _normalizeClass([\"ui right labeled input\", $data.reg_mark_chkbox == false ? 'disabled' : ''])\n              }, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  onChange: _cache[9] || (_cache[9] = $event => ($options.generatePreviewImage('MARK'))),\n                  type: \"number\",\n                  min: \"0\",\n                  max: \"1000\",\n                  \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => (($data.form['MARK']) = $event))\n                }, null, 544), [\n                  [_vModelText, $data.form['MARK']]\n                ]),\n                _createElementVNode(\"div\", _hoisted_55, _toDisplayString($data.selected_unit), 1)\n              ], 2)\n            ]),\n            _createElementVNode(\"div\", _hoisted_56, [\n              _createElementVNode(\"div\", _hoisted_57, [\n                _createElementVNode(\"div\", _hoisted_58, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.registration_marks, (datum) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: datum.id,\n                      class: \"field\"\n                    }, [\n                      _createElementVNode(\"div\", {\n                        class: _normalizeClass([\"ui radio checkbox\", $data.reg_mark_chkbox == false ? 'disabled' : ''])\n                      }, [\n                        _withDirectives(_createElementVNode(\"input\", {\n                          onChange: $event => ($options.generatePreviewImage(datum.symbol)),\n                          type: \"radio\",\n                          name: \"regmark\",\n                          value: datum.id,\n                          \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => (($data.selected_reg_mark) = $event))\n                        }, null, 40, _hoisted_59), [\n                          [_vModelRadio, $data.selected_reg_mark]\n                        ]),\n                        _createElementVNode(\"label\", null, _toDisplayString(datum.description), 1)\n                      ], 2)\n                    ]))\n                  }), 128))\n                ])\n              ])\n            ])\n          ])\n        ]),\n        _hoisted_60,\n        _createElementVNode(\"div\", _hoisted_61, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.pro_setting_form, (datum) => {\n            return (_openBlock(), _createElementBlock(\"div\", _hoisted_62, [\n              _createElementVNode(\"label\", _hoisted_63, [\n                _createElementVNode(\"small\", null, _toDisplayString(datum.name), 1)\n              ]),\n              _createElementVNode(\"div\", _hoisted_64, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  onChange: $event => ($options.generatePreviewImage(datum.symbol)),\n                  type: \"text\",\n                  min: _ctx.minval,\n                  max: _ctx.maxval,\n                  \"onUpdate:modelValue\": $event => (($data.form[`${datum.symbol}`]) = $event)\n                }, null, 40, _hoisted_65), [\n                  [_vModelText, $data.form[`${datum.symbol}`]]\n                ]),\n                _createElementVNode(\"div\", _hoisted_66, _toDisplayString($data.selected_unit), 1)\n              ])\n            ]))\n          }), 256))\n        ])\n      ])\n    ]),\n    _createTextVNode(\"node \")\n  ]))\n}\n\nimport \"C:/xampp/htdocs/projects/boxmaker/components/ComForm/index.vue?vue&type=style&index=0&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1702283580100,
      "end": 1702283580207,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702283580207,
      "end": 1702283580207,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702283580207,
      "end": 1702283580207,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702283580208,
      "end": 1702283580208,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702283580208,
      "end": 1702283580208,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702283580208,
      "end": 1702283580208,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702283580208,
      "end": 1702283580208,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702283580208,
      "end": 1702283580208,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702283580208,
      "end": 1702283580209,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702283580209,
      "end": 1702283580209,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702283580209,
      "end": 1702283580209,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702283580209,
      "end": 1702283580209,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702283580209,
      "end": 1702283580209,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702283580209,
      "end": 1702283580209,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702283580209,
      "end": 1702283580209,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702283580209,
      "end": 1702283580209,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702283580209,
      "end": 1702283580210,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702283580210,
      "end": 1702283580226,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702283580226,
      "end": 1702283580226,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702283580226,
      "end": 1702283580226,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702283580226,
      "end": 1702283580226,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702283580226,
      "end": 1702283580226,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702283580226,
      "end": 1702283580227,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702283580227,
      "end": 1702283580227,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702283580227,
      "end": 1702283580227,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702283580227,
      "end": 1702283580227,
      "order": "normal"
    }
  ]
}
